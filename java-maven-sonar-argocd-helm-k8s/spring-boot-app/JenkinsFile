pipeline{
    agent {
        docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }

    }
    stages{
        stage(check out){
            //sh 'cd  java-maven-sonar-argocd-helm-k8s/spring-boot-app'
            echo "code checkout done"
        }

stage(build and test){
    steps{
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
    }

}
    stage(static code analysis){
        environment{
            SONAR_URL= ""
        }
        steps{
        withCreditals([string(creditalsId:'sonar_id', variable:'SONAR_AUTH')])
        {
            sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar_id=$SONAR_AUTH -Dsonar_url= ${SONAR_URL} '
        }}
    }

    stage(docker images build){
        environment{
            docker_image= "vinnethvinni/jenkins-projects:${BUILD_NUMBER}"
            docker_credentials= creditals('docker_cred')
        }
        steps{
            script{
             cd 'java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${docker_image} .' 
             def dockerImage= docker.image("${docker_image}")
             docker.withRegistry('https://index.docker.io/v1/', 'docker_cred') {
             dockerImage.push() 
              } } 
        }}

        stage(deploy){
            environment{
                git_repo= 'Jenkins-Zero-To-Hero'
                git_username= "vijayakhil13"
            }
            steps{
            withCreditals([string(crediantialsId:'git_cred', variable: 'git_auth')]){
                sh '''
                git config user.name= "vijayakhil13"
                git config user.email= "vijayakhil13@gmail.com'
                sed -i 's/replaceImageTag/${BUILD_NUMBER}/g' java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git commit -m "${BUILD_NUMEBER}"
                git push https://${git_auth}@github.com/${git_usename}/${git_repo}  HEAD:main
                '''
            }
        }
    }
    }

    }

